apiVersion: apps/v1
kind: Deployment
metadata:
  name: crm-api
spec:
  replicas: 1
  revisionHistoryLimit: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0 
  selector:
    matchLabels:
      app: crm-api
  template:
    metadata:
      labels:
        app: crm-api
        release: production
    spec:
      serviceAccountName: kdvmanager-sa
      containers:
      - name: crm-pod
        image: ghcr.io/luuklabs/kdvmanager/crm.api:linux-main
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            port: 80
            path: /healthz
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        readinessProbe:
          httpGet:
            port: 80
            path: /healthz
          initialDelaySeconds: 20
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          limits:
            memory: 100Mi
            cpu: 500m
          requests:
            memory: 50Mi
            cpu: 100m
        ports:
          - name: http
            containerPort: 80
            protocol: TCP
          - name: https
            containerPort: 443
            protocol: TCP
        env:
          - name: OTEL_ENDPOINT
            value: "http://otel-collector.observability.svc.cluster.local:4317"
          - name: ASPNETCORE_ENVIRONMENT
            value: "Production"
          - name: ASPNETCORE_URLS
            value: "http://+:80"
          - name: POSTGRES_SERVER
            value: "private-db-kdvmanager-ams3-do-user-13194146-0.l.db.ondigitalocean.com"
          - name: POSTGRES_USER
            value: "doadmin"
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: kdvmanager-postgres-secret
                key: password
          - name: POSTGRES_PORT
            value: "25060"
          - name: POSTGRES_DATABASE
            value: "KDVManagerCRMDB"
          - name: ConnectionStrings__KDVManagerCRMConnectionString
            value: "Server=$(POSTGRES_SERVER); port=$(POSTGRES_PORT); database=$(POSTGRES_DATABASE); User ID=$(POSTGRES_USER); password=$(POSTGRES_PASSWORD); pooling=true; sslmode=require; Maximum Pool Size=5; Minimum Pool Size=1; Connection Idle Lifetime=300; Connection Pruning Interval=10"
          - name: RABBITMQ_DEFAULT_USER
            valueFrom:
              secretKeyRef:
                name: rabbitmq-secret
                key: RABBITMQ_DEFAULT_USER
          - name: RABBITMQ_DEFAULT_PASS
            valueFrom:
              secretKeyRef:
                name: rabbitmq-secret
                key: RABBITMQ_DEFAULT_PASS
          - name: ConnectionStrings__RabbitMQ
            value: "amqp://$(RABBITMQ_DEFAULT_USER):$(RABBITMQ_DEFAULT_PASS)@rabbitmq.kdvmanager-prod.svc.cluster.local:5672/"
      initContainers:
      - name: crm-migration
        image: ghcr.io/luuklabs/kdvmanager/crm.migrator:linux-main
        imagePullPolicy: Always
        env:
          - name: OTEL_ENDPOINT
            value: "http://otel-collector.observability.svc.cluster.local:4317"
          - name: POSTGRES_SERVER
            value: "private-db-kdvmanager-ams3-do-user-13194146-0.l.db.ondigitalocean.com"
          - name: POSTGRES_USER
            value: "doadmin"
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: kdvmanager-postgres-secret
                key: password
          - name: POSTGRES_PORT
            value: "25060"
          - name: POSTGRES_DATABASE
            value: "KDVManagerCRMDB"
          - name: ConnectionStrings__KDVManagerCRMConnectionString
            value: "Server=$(POSTGRES_SERVER); port=$(POSTGRES_PORT); database=$(POSTGRES_DATABASE); User ID=$(POSTGRES_USER); password=$(POSTGRES_PASSWORD); pooling=true; sslmode=require; Maximum Pool Size=2; Minimum Pool Size=1; Connection Idle Lifetime=300; Connection Pruning Interval=10"