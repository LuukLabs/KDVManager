version: '3.4'

services:
  envoy:
    restart: always
    volumes:
      - ./Services/ApiGateways/Envoy/config:/etc/envoy
      - ./Services/ApiGateways/Envoy/logs:/var/log
    ports:
      - "5200:80"
      - "8001:8001"
      - "8080:8080"

  postgres:
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=sammy
      - POSTGRES_PASSWORD=shark
    volumes:
      - kdvmanager-data:/var/lib/postgresql/data/
    ports:
      - "5433:5432"

  scheduling-api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__KDVManagerConnectionString=Server=postgres;
        port=5432; database=KDVManagerGroupManagementDB; User ID=sammy;
        password=shark; pooling=true
    ports:
      - "80"
      - "443"
    volumes:
      - ~/.aspnet/https:/root/.aspnet/https:ro
      - ~/.microsoft/usersecrets:/root/.microsoft/usersecrets:ro

  childmanagement-migrator:
    build:
      context: .
      dockerfile: Services/ChildManagement/KDVManager.Services.ChildManagement.Persistence/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__KDVManagerChildManagementConnectionString=Server=postgres;
        port=5432; database=KDVManagerGroupManagementDB; User ID=sammy;
        password=shark; pooling=true
    depends_on:
      - postgres

  childmanagement-api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__KDVManagerChildManagementConnectionString=Server=postgres;
        port=5432; database=KDVManagerGroupManagementDB; User ID=sammy;
        password=shark; pooling=true
    ports:
      - "80"
      - "443"
    volumes:
      - ~/.aspnet/https:/root/.aspnet/https:ro
      - ~/.microsoft/usersecrets:/root/.microsoft/usersecrets:ro

volumes:
  kdvmanager-data: null
