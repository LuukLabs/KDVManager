apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-config
  namespace: observability
  labels:
    app: otel-collector
    app.kubernetes.io/name: otel-collector
    app.kubernetes.io/part-of: observability-stack
    app.kubernetes.io/component: telemetry-collector
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
data:
  otel-collector-config.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      prometheus:
        config:
          scrape_configs:
            - job_name: 'otel-collector'
              static_configs:
                - targets: ['localhost:8889']
      k8s_cluster:
        auth_type: serviceAccount
      kubeletstats:
        collection_interval: 20s
        auth_type: serviceAccount
        endpoint: "https://${env:K8S_NODE_IP}:10250"
        insecure_skip_verify: true
        metric_groups:
          - node
          - pod
          - container
    
    processors:
      batch:
        timeout: 1s
        send_batch_size: 1024
      resource:
        attributes:
          - key: environment
            value: production
            action: upsert
          - key: cluster
            value: kdvmanager-prod
            action: upsert
      memory_limiter:
        limit_mib: 512
        check_interval: 1s
      filter:
        metrics:
          include:
            match_type: regexp
            metric_names:
              - '^k8s.node.condition$'
              - '^k8s.node.allocatable.*$'

    exporters:
      debug:
        verbosity: detailed
      otlp/jaeger:
        endpoint: "jaeger.observability.svc.cluster.local:4317"
        tls:
          insecure: true
      prometheus:
        endpoint: "0.0.0.0:8889"
        metric_expiration: 180m
        enable_open_metrics: true
        
    extensions:
      health_check:
        endpoint: 0.0.0.0:13133
      pprof:
        endpoint: 0.0.0.0:1777
      zpages:
        endpoint: 0.0.0.0:55679
    
    service:
      extensions: [health_check, pprof, zpages]
      pipelines:
        traces:
          receivers: [otlp]
          processors: [memory_limiter, resource, batch]
          exporters: [otlp/jaeger, debug]
        metrics:
          receivers: [otlp, prometheus, k8s_cluster, kubeletstats]
          processors: [memory_limiter, resource, filter, batch]
          exporters: [prometheus, debug]
        logs:
          receivers: [otlp]
          processors: [memory_limiter, resource, batch]
          exporters: [debug]
