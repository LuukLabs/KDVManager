apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-config
  namespace: observability
  labels:
    app: otel-collector
    app.kubernetes.io/name: otel-collector
    app.kubernetes.io/part-of: observability-stack
    app.kubernetes.io/component: telemetry-collector
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
data:
  otel-collector-config.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      prometheus:
        config:
          scrape_configs:
            - job_name: 'otel-collector'
              static_configs:
                - targets: ['localhost:8889']
    
    processors:
      batch:
        timeout: 1s
        send_batch_size: 1024
      resource:
        attributes:
          - key: environment
            value: production
            action: upsert
          - key: cluster
            value: kdvmanager-prod
            action: upsert
      memory_limiter:
        limit_mib: 512
        check_interval: 1s

    exporters:
      debug:
        verbosity: detailed
      # otlp:
      #   endpoint: "your-external-otel-endpoint:4317"
      #   tls:
      #     insecure: true
      # prometheus:
      #   endpoint: "0.0.0.0:8889"
        
    extensions:
      health_check:
        endpoint: 0.0.0.0:13133
      pprof:
        endpoint: 0.0.0.0:1777
      zpages:
        endpoint: 0.0.0.0:55679
    
    service:
      extensions: [health_check, pprof, zpages]
      pipelines:
        traces:
          receivers: [otlp]
          processors: [memory_limiter, resource, batch]
          exporters: [debug] # otlp
        metrics:
          receivers: [otlp, prometheus]
          processors: [memory_limiter, resource, batch]
          exporters: [debug] # prometheus, otlp
        logs:
          receivers: [otlp]
          processors: [memory_limiter, resource, batch]
          exporters: [debug] # otlp
