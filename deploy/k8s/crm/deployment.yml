apiVersion: apps/v1
kind: Deployment
metadata:
  name: crm-api
  namespace: kdvmanager-prod
  labels:
    app: crm-api
    release: production
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0 
  selector:
    matchLabels:
      app: crm-api
      release: production
  template:
    metadata:
      labels:
        app: crm-api
        release: production
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: crm-pod
        image: ghcr.io/luukvh/kdvmanager/crm.api:linux-master
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            port: 80
            path: /healthz
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 2
        readinessProbe:
          httpGet:
            port: 80
            path: /healthz
          initialDelaySeconds: 10
          periodSeconds: 3
        resources:
          limits:
            memory: 200Mi
            cpu: 500m
          requests:
            memory: 100Mi
            cpu: 200m
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
        ports:
          - name: http
            containerPort: 80
            protocol: TCP
          - name: https
            containerPort: 443
            protocol: TCP
        env:
          - name: ASPNETCORE_URLS
            value: "http://+:80"
          - name: POSTGRES_SERVER
            value: "kdvmanager-postgres"
          - name: POSTGRES_USER
            value: "postgres"
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                  name: kdvmanager-postgres-secret
                  key: superUserPassword        
          - name: ConnectionStrings__KDVManagerCRMConnectionString
            value: "Server=$(POSTGRES_SERVER); port=5432; database=KDVManagerCRMDB; User ID=$(POSTGRES_USER); password=$(POSTGRES_PASSWORD); pooling = true"
      initContainers:
      - name: crm-migration
        image: ghcr.io/luukvh/kdvmanager/crm.migrator:linux-master
        imagePullPolicy: Always
        env:
          - name: POSTGRES_SERVER
            value: "kdvmanager-postgres"
          - name: POSTGRES_USER
            value: "postgres"
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                  name: kdvmanager-postgres-secret
                  key: superUserPassword        
          - name: ConnectionStrings__KDVManagerCRMConnectionString
            value: "Server=$(POSTGRES_SERVER); port=5432; database=KDVManagerCRMDB; User ID=$(POSTGRES_USER); password=$(POSTGRES_PASSWORD); pooling = true"