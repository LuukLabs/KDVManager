version: '3.4'

services:
  envoy:
    image: envoyproxy/envoy:v1.34.0
    command: ["/usr/local/bin/envoy", "-c", "/etc/envoy/envoy.yaml", "--log-level", "info"]
    volumes:
      - ./Services/ApiGateways/Envoy/config/envoy.yaml:/etc/envoy/envoy.yaml:ro
    ports:
      - "8080:8080"
      - "8001:8001"

  postgres:
    image: postgres:latest
  
  rabbitmq:
    image: rabbitmq:4-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  web:
    image: ${REGISTRY:-kdvmanager}/web:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: ./web
      args:
        VITE_APP_AUTH0_DOMAIN: kdvmanager.eu.auth0.com
        VITE_APP_AUTH0_CLIENT_ID: ITepsevBBZNElNNrVmZjgkwaVCsmmKWc
        VITE_API_BASE_URL: https://api.kdvmanager.nl

  crm-api:
    image: ${REGISTRY:-kdvmanager}/crm.api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/CRM/Api/Dockerfile
    depends_on:
      - postgres
      - rabbitmq

  crm-migrator:
    image: ${REGISTRY:-kdvmanager}/crm.migrator:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/CRM/Infrastructure/Dockerfile
    depends_on:
      - postgres

  scheduling-api:
    image: ${REGISTRY:-kdvmanager}/scheduling.api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Scheduling/Api/Dockerfile
      args:
        - NUGET_GITHUB_TOKEN=${NUGET_GITHUB_TOKEN}
    depends_on:
      - postgres
      - rabbitmq

  scheduling-migrator:
    image: ${REGISTRY:-kdvmanager}/scheduling.migrator:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Scheduling/Infrastructure/Dockerfile
      args:
        - NUGET_GITHUB_TOKEN=${NUGET_GITHUB_TOKEN}
    depends_on:
      - postgres

  otel-collector:
    image: otel/opentelemetry-collector-contrib
    volumes:
      - ./otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml
    ports:
    - 1888:1888 # pprof extension
    - 8888:8888 # Prometheus metrics exposed by the Collector
    - 8889:8889 # Prometheus exporter metrics
    - 13133:13133 # health_check extension
    - 4317:4317 # OTLP gRPC receiver
    - 4318:4318 # OTLP http receiver
    - 55679:55679 # zpages extension
