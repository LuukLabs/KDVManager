{
  "openapi": "3.0.3",
  "info": {
    "title": "KDVManager CRM API",
    "contact": {
      "name": "Luuk van Hulten",
      "email": "admin@kdvmanager.nl"
    },
    "version": "v1"
  },
  "servers": [
    {
      "url": "http://localhost:5200/"
    }
  ],
  "tags": [
    {
      "name": "children"
    },
    {
      "name": "guardians"
    }
  ],
  "paths": {
    "/crm/v1/children": {
      "get": {
        "tags": ["children"],
        "operationId": "ListChildren",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChildListVM"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["children"],
        "operationId": "AddChild",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddChildCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableEntityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/crm/v1/children/{id}": {
      "get": {
        "tags": ["children"],
        "operationId": "GetChildById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildDetailVM"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["children"],
        "operationId": "UpdateChild",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateChildCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableEntityResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["children"],
        "operationId": "DeleteChild",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/crm/v1/children/{id}/archive": {
      "post": {
        "tags": ["children"],
        "operationId": "ArchiveChild",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/crm/v1/guardians": {
      "get": {
        "tags": ["guardians"],
        "operationId": "ListGuardians",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GuardianListVM"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["guardians"],
        "operationId": "AddGuardian",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddGuardianCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      }
    },
    "/crm/v1/guardians/{id}": {
      "get": {
        "tags": ["guardians"],
        "operationId": "GetGuardianById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuardianDetailVM"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["guardians"],
        "operationId": "UpdateGuardian",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGuardianCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "delete": {
        "tags": ["guardians"],
        "operationId": "DeleteGuardian",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/crm/v1/guardians/{guardianId}/children": {
      "get": {
        "tags": ["guardians"],
        "operationId": "GetGuardianChildren",
        "parameters": [
          {
            "name": "guardianId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GuardianChildVM"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/v1/children/{childId}/guardians": {
      "get": {
        "tags": ["guardians"],
        "operationId": "GetChildGuardians",
        "parameters": [
          {
            "name": "childId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChildGuardianVM"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crm/v1/children/{childId}/guardians/{guardianId}": {
      "post": {
        "tags": ["guardians"],
        "operationId": "LinkGuardianToChild",
        "parameters": [
          {
            "name": "childId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "guardianId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkGuardianToChildRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "delete": {
        "tags": ["guardians"],
        "operationId": "UnlinkGuardianFromChild",
        "parameters": [
          {
            "name": "childId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "guardianId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/scheduling/v1/children/{childId}/absences": {
      "get": {
        "tags": ["Absences"],
        "operationId": "GetAbsencesByChildId",
        "parameters": [
          {
            "name": "childId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AbsenceListByChildIdVM"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AbsenceListByChildIdVM"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AbsenceListByChildIdVM"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Absences"],
        "operationId": "AddAbsence",
        "parameters": [
          {
            "name": "childId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAbsenceCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAbsenceCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddAbsenceCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableEntityResponse1"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableEntityResponse1"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableEntityResponse1"
                }
              }
            }
          }
        }
      }
    },
    "/scheduling/v1/absences/{Id}": {
      "delete": {
        "tags": ["Absences"],
        "operationId": "DeleteAbsence",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/scheduling/v1/closure-periods": {
      "get": {
        "tags": ["ClosurePeriods"],
        "operationId": "ListClosurePeriods",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClosurePeriod"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClosurePeriod"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClosurePeriod"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["ClosurePeriods"],
        "operationId": "AddClosurePeriod",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddClosurePeriodCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddClosurePeriodCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddClosurePeriodCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      }
    },
    "/scheduling/v1/closure-periods/{id}": {
      "delete": {
        "tags": ["ClosurePeriods"],
        "operationId": "DeleteClosurePeriod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/scheduling/v1/groups": {
      "get": {
        "tags": ["Groups"],
        "operationId": "ListGroups",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupListVM"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupListVM"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupListVM"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Groups"],
        "operationId": "AddGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddGroupCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddGroupCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddGroupCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableEntityResponse1"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableEntityResponse1"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableEntityResponse1"
                }
              }
            }
          }
        }
      }
    },
    "/scheduling/v1/groups/{Id}": {
      "delete": {
        "tags": ["Groups"],
        "operationId": "DeleteGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/scheduling/v1/schedules": {
      "get": {
        "tags": ["Schedules"],
        "operationId": "GetChildSchedules",
        "parameters": [
          {
            "name": "childId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChildScheduleListVM"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChildScheduleListVM"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChildScheduleListVM"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Schedules"],
        "operationId": "AddSchedule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddScheduleCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddScheduleCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddScheduleCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableEntityResponse1"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableEntityResponse1"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableEntityResponse1"
                }
              }
            }
          }
        }
      }
    },
    "/scheduling/v1/schedules/daterange": {
      "get": {
        "tags": ["Schedules"],
        "operationId": "GetSchedulesByDate",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "groupId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduleByDateVM"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduleByDateVM"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduleByDateVM"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/scheduling/v1/schedules/group-summary": {
      "get": {
        "tags": ["Schedules"],
        "operationId": "GetGroupSummary",
        "parameters": [
          {
            "name": "groupId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GroupSummaryVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupSummaryVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupSummaryVM"
                }
              }
            }
          }
        }
      }
    },
    "/scheduling/v1/schedules/print": {
      "get": {
        "tags": ["Schedules"],
        "operationId": "GetPrintSchedules",
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "year",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "groupId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "groupIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PrintSchedulesVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrintSchedulesVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrintSchedulesVM"
                }
              }
            }
          }
        }
      }
    },
    "/scheduling/v1/schedules/long-term-planning": {
      "get": {
        "tags": ["Schedules"],
        "operationId": "GetLongTermPlanning",
        "parameters": [
          {
            "name": "groupId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "days",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LongTermPlanningVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LongTermPlanningVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LongTermPlanningVM"
                }
              }
            }
          }
        }
      }
    },
    "/scheduling/v1/schedules/{Id}": {
      "delete": {
        "tags": ["Schedules"],
        "operationId": "DeleteSchedule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/scheduling/v1/timeslots": {
      "get": {
        "tags": ["TimeSlots"],
        "operationId": "ListTimeSlots",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeSlotListVM"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeSlotListVM"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeSlotListVM"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["TimeSlots"],
        "operationId": "AddTimeSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddTimeSlotCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddTimeSlotCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddTimeSlotCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableEntityResponse1"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableEntityResponse1"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableEntityResponse1"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddChildCommand": {
        "required": ["givenName", "familyName", "dateOfBirth"],
        "type": "object",
        "properties": {
          "givenName": {
            "type": "string",
            "nullable": true
          },
          "familyName": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "cid": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AddGuardianCommand": {
        "type": "object",
        "properties": {
          "givenName": {
            "type": "string"
          },
          "familyName": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date"
          },
          "email": {
            "type": "string"
          },
          "phoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddPhoneNumberDto"
            }
          }
        }
      },
      "AddPhoneNumberDto": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/PhoneNumberType"
          }
        }
      },
      "ChildDetailVM": {
        "required": ["givenName", "familyName"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "givenName": {
            "type": "string"
          },
          "familyName": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date"
          },
          "cid": {
            "type": "string",
            "nullable": true
          },
          "archivedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ChildGuardianVM": {
        "required": ["fullName"],
        "type": "object",
        "properties": {
          "guardianId": {
            "type": "string",
            "format": "uuid"
          },
          "fullName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "relationshipType": {
            "$ref": "#/components/schemas/GuardianRelationshipType"
          },
          "isPrimaryContact": {
            "type": "boolean"
          },
          "isEmergencyContact": {
            "type": "boolean"
          }
        }
      },
      "ChildListVM": {
        "required": ["id", "fullName", "dateOfBirth"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "fullName": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date"
          },
          "archivedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ChildRelationshipVM": {
        "required": ["childName"],
        "type": "object",
        "properties": {
          "childId": {
            "type": "string",
            "format": "uuid"
          },
          "childName": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date"
          },
          "relationshipType": {
            "$ref": "#/components/schemas/GuardianRelationshipType"
          },
          "isPrimaryContact": {
            "type": "boolean"
          },
          "isEmergencyContact": {
            "type": "boolean"
          }
        }
      },
      "GuardianChildVM": {
        "required": ["fullName"],
        "type": "object",
        "properties": {
          "childId": {
            "type": "string",
            "format": "uuid"
          },
          "fullName": {
            "type": "string"
          },
          "cid": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date"
          },
          "age": {
            "type": "integer",
            "format": "int32"
          },
          "relationshipType": {
            "$ref": "#/components/schemas/GuardianRelationshipType"
          },
          "isPrimaryContact": {
            "type": "boolean"
          },
          "isEmergencyContact": {
            "type": "boolean"
          },
          "isArchived": {
            "type": "boolean"
          }
        }
      },
      "GuardianDetailVM": {
        "required": ["givenName", "familyName"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "givenName": {
            "type": "string"
          },
          "familyName": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneNumberVM"
            }
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildRelationshipVM"
            }
          }
        }
      },
      "GuardianListVM": {
        "required": ["id", "fullName", "email", "primaryPhoneNumber"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "fullName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "primaryPhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "phoneNumberCount": {
            "type": "integer",
            "format": "int32"
          },
          "childrenCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GuardianRelationshipType": {
        "enum": ["Parent", "Guardian", "Grandparent", "Other"]
      },
      "LinkGuardianToChildRequest": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "$ref": "#/components/schemas/GuardianRelationshipType"
          },
          "isPrimaryContact": {
            "type": "boolean"
          },
          "isEmergencyContact": {
            "type": "boolean"
          }
        }
      },
      "PhoneNumberType": {
        "enum": ["Mobile", "Home", "Work", "Other"]
      },
      "PhoneNumberVM": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "number": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/PhoneNumberType"
          }
        }
      },
      "UnprocessableEntityResponse": {
        "required": ["status", "errors"],
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "UpdateChildCommand": {
        "required": ["id", "givenName", "familyName", "dateOfBirth"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "givenName": {
            "type": "string",
            "nullable": true
          },
          "familyName": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "cid": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateGuardianCommand": {
        "required": ["id", "givenName", "familyName", "dateOfBirth", "email"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "givenName": {
            "type": "string"
          },
          "familyName": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date"
          },
          "email": {
            "type": "string"
          },
          "phoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdatePhoneNumberDto"
            }
          }
        }
      },
      "UpdatePhoneNumberDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "number": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/PhoneNumberType"
          }
        }
      },
      "ValidationError": {
        "required": ["property", "code", "title"],
        "type": "object",
        "properties": {
          "property": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "AbsenceListByChildIdVM": {
        "required": ["endDate", "id", "reason", "startDate"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "reason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddAbsenceCommand": {
        "type": "object",
        "properties": {
          "childId": {
            "type": "string",
            "format": "uuid"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "reason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddClosurePeriodCommand": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "reason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddGroupCommand": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddScheduleCommand": {
        "type": "object",
        "properties": {
          "childId": {
            "type": "string",
            "format": "uuid"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "scheduleRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddScheduleCommandScheduleRule"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddScheduleCommandScheduleRule": {
        "type": "object",
        "properties": {
          "day": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "timeSlotId": {
            "type": "string",
            "format": "uuid"
          },
          "groupId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "AddTimeSlotCommand": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "format": "time"
          },
          "endTime": {
            "type": "string",
            "format": "time"
          }
        },
        "additionalProperties": false
      },
      "AgeAddOptionVM": {
        "type": "object",
        "properties": {
          "ageRange": {
            "type": "string",
            "nullable": true
          },
          "canAddWithCurrentStaff": {
            "type": "boolean"
          },
          "canAddWithOneExtraStaff": {
            "type": "boolean"
          },
          "additionalProfessionalsNeeded": {
            "type": "integer",
            "format": "int32"
          },
          "resultingProfessionals": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AgeGroupSummary": {
        "type": "object",
        "properties": {
          "ageRange": {
            "type": "string",
            "nullable": true
          },
          "childCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ChildScheduleListVM": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "childId": {
            "type": "string",
            "format": "uuid"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "scheduleRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildScheduleListVMScheduleRule"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChildScheduleListVMScheduleRule": {
        "type": "object",
        "properties": {
          "day": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "timeSlotId": {
            "type": "string",
            "format": "uuid"
          },
          "timeSlotName": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "format": "time"
          },
          "endTime": {
            "type": "string",
            "format": "time"
          },
          "groupId": {
            "type": "string",
            "format": "uuid"
          },
          "groupName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClosurePeriod": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "reason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DayOfWeek": {
        "enum": [0, 1, 2, 3, 4, 5, 6],
        "type": "integer",
        "format": "int32"
      },
      "GroupListVM": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupSummaryVM": {
        "required": ["date", "groupId", "groupName", "timeBlocks"],
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string",
            "format": "uuid"
          },
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "timeBlocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimeBlockSummary"
            }
          },
          "requiredProfessionals": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfChildren": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "LongTermPlanningVM": {
        "required": ["days", "daysData", "startDate"],
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "days": {
            "type": "integer",
            "format": "int32"
          },
          "daysData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlanningDayVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PlanningDayVM": {
        "required": ["date", "timeBlocks"],
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "timeBlocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlanningTimeBlockVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PlanningTimeBlockVM": {
        "required": [
          "endTime",
          "requiredProfessionals",
          "startTime",
          "timeSlotName",
          "totalChildren"
        ],
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "format": "time"
          },
          "endTime": {
            "type": "string",
            "format": "time"
          },
          "timeSlotName": {
            "type": "string",
            "nullable": true
          },
          "totalChildren": {
            "type": "integer",
            "format": "int32"
          },
          "requiredProfessionals": {
            "type": "integer",
            "format": "int32"
          },
          "capacityCurrent": {
            "type": "integer",
            "format": "int32"
          },
          "capacityWithExtraSupervisor": {
            "type": "integer",
            "format": "int32"
          },
          "spotsCurrent": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "spotsWithExtraSupervisor": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "originalHasSolution": {
            "type": "boolean"
          },
          "ageGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgeGroupSummary"
            },
            "nullable": true
          },
          "ageAddOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgeAddOptionVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PrintCellVM": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "nullable": true
          },
          "absenceType": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PrintChildVM": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "givenName": {
            "type": "string",
            "nullable": true
          },
          "familyName": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "schedule": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/PrintCellVM"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PrintGroupVM": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "pages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrintGroupWeekdayPageVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PrintGroupWeekdayPageVM": {
        "type": "object",
        "properties": {
          "weekday": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "dates": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "nullable": true
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrintChildVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PrintSchedulesVM": {
        "type": "object",
        "properties": {
          "month": {
            "type": "string",
            "nullable": true
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrintGroupVM"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {}
      },
      "ScheduleByDateVM": {
        "type": "object",
        "properties": {
          "scheduleId": {
            "type": "string",
            "format": "uuid"
          },
          "childId": {
            "type": "string",
            "format": "uuid"
          },
          "timeSlotName": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "format": "time"
          },
          "endTime": {
            "type": "string",
            "format": "time"
          },
          "groupId": {
            "type": "string",
            "format": "uuid"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TimeBlockSummary": {
        "required": [
          "ageGroups",
          "endTime",
          "requiredProfessionals",
          "startTime",
          "timeSlotName",
          "totalChildren"
        ],
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "format": "time"
          },
          "endTime": {
            "type": "string",
            "format": "time"
          },
          "timeSlotName": {
            "type": "string",
            "nullable": true
          },
          "totalChildren": {
            "type": "integer",
            "format": "int32"
          },
          "requiredProfessionals": {
            "type": "integer",
            "format": "int32"
          },
          "ageGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgeGroupSummary"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TimeSlotListVM": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "format": "time"
          },
          "endTime": {
            "type": "string",
            "format": "time"
          }
        },
        "additionalProperties": false
      },
      "UnprocessableEntityResponse1": {
        "required": ["errors", "status"],
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError1"
            }
          }
        },
        "additionalProperties": false
      },
      "ValidationError1": {
        "required": ["code", "property", "title"],
        "type": "object",
        "properties": {
          "property": {
            "minLength": 1,
            "type": "string"
          },
          "code": {
            "minLength": 1,
            "type": "string"
          },
          "title": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  }
}
